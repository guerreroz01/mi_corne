#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include "keys_es.h"
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    combos {
        compatible = "zmk,combos";

        combo_capa_3 {
            bindings = <&mo 3>;
            key-positions = <43 46>;
            timeout-ms = <50>;
            slow-release;
        };

        arch_key {
            bindings = <&arch_key>;
            key-positions = <28 13 36>;
        };

        caps_lock {
            bindings = <&kp CAPSLOCK>;
            key-positions = <13 27>;
        };
    };

    macros {
        arch_key: arch_key {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_tap>,
                <&kp N1 &kp N0 &kp N1 &kp N2 &kp N1 &kp N9 &kp N5 &kp N7 &kp LS(O) &kp L &kp I &kp V &kp E &kp R &kp LS(R) &kp E &kp Y &kp E &kp S &kp ES_UNDER>;

            label = "ARCH_KEY";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "OLIVER";
            bindings = <
&kp TAB         &kp Q  &kp W  &kp F     &kp P  &kp B                             &kp UP                &kp J               &kp L  &kp U         &kp Y          &kp ES_N_TILDE  &kp BSPC
&kp LEFT_SHIFT  &kp A  &kp R  &kp S     &kp T  &kp G                   &kp LEFT  &kp ENTER  &kp RIGHT  &kp M               &kp N  &kp ES_E      &kp I          &kp O           &kp ES_ACUTE
&kp LCTRL       &kp X  &kp C  &kp D     &kp V  &kp Z         &tog 4              &kp DOWN              &kp ES_K            &kp H  &kp ES_COMMA  &kp ES_PERIOD  &kp ES_MINUS    &kp ESC
                              &kp RWIN  &mo 1  &kp ES_SPACE                                            &mt LEFT_ALT ENTER  &mo 2  &kp RALT
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        number {
            display-name = "NUMBER";
            bindings = <
&trans  &kp N1            &kp N2               &kp N3                          &kp N4                           &kp N5                                                          &mmv MOVE_UP                     &kp N6                             &kp N7                             &kp N8                             &kp N9                            &kp N0    &kp BSPC
&trans  &kp ES_LESS_THAN  &kp ES_GREATER_THAN  &rgb_ug RGB_TOG                 &kp ES_INVERTED_QUESTION         &kp ES_QUESTION                                 &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp LEFT                           &kp DOWN                           &kp UP                             &kp RIGHT                         &kp HOME  &kp PG_UP
&trans  &rgb_ug RGB_EFF   &rgb_ug RGB_SPI      &rgb_ug RGB_COLOR_HSB(0,0,100)  &rgb_ug RGB_COLOR_HSB(0,100,50)  &rgb_ug RGB_COLOR_HSB(60,100,52)  &kp C_MUTE                    &mmv MOVE_DOWN                   &rgb_ug RGB_COLOR_HSB(125,100,50)  &rgb_ug RGB_COLOR_HSB(182,100,50)  &rgb_ug RGB_COLOR_HSB(301,100,50)  &rgb_ug RGB_COLOR_HSB(231,90,69)  &kp END   &kp PG_DN
                                               &trans                          &trans                           &trans                                                                                           &kp INS                            &trans                             &kp DELETE
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        symbol {
            display-name = "SYMBOL";
            bindings = <
&trans  &kp EXCL      &kp ES_AT_SIGN  &kp ES_HASH  &kp DLLR  &kp PRCNT                            &mmv MOVE_UP                     &kp ES_CARET         &kp ES_AMPS   &kp ES_ASTERISK      &kp ES_LEFT_PARENTHESIS  &kp ES_RIGHT_PARENTHESIS  &kp BSPC
&trans  &mkp LCLK     &mkp RCLK       &mkp MB3     &mkp MB2  &mkp MB4             &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp ES_SINGLE_QUOTE  &kp ES_EQUAL  &kp ES_LEFT_BRACKET  &kp ES_RIGHT_BRACKET     &kp ES_BACKSLASH          &kp ES_GRAVE
&trans  &out OUT_USB  &out OUT_BLE    &none        &none     &mkp MB5   &trans                    &mmv MOVE_DOWN                   &kp ES_PIPE          &kp ES_PLUS   &kp ES_LEFT_BRACE    &kp ES_RIGHT_BRACE       &kp ES_SLASH              &kp ES_TILDE
                                      &trans       &trans    &kp SPACE                                                             &kp RET              &trans        &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        fn {
            display-name = "Fn";
            bindings = <
&studio_unlock  &kp F1          &kp F2  &kp F3       &kp F4      &kp F5                                    &mmv MOVE_UP                     &kp F6        &kp F7            &kp F8       &kp F9          &kp F10          &kp F11
&trans          &bt BT_CLR_ALL  &none   &bt BT_NXT   &bt BT_PRV  &bt BT_CLR                &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp C_STOP    &kp C_PLAY_PAUSE  &kp C_NEXT   &kp C_PREVIOUS  &kp PRINTSCREEN  &kp F12
&trans          &sys_reset      &none   &bootloader  &none       &none       &kp C_MUTE                    &mmv MOVE_DOWN                   &none         &none             &bootloader  &sys_reset      &kp SCROLLLOCK   &kp PAUSE_BREAK
                                        &trans       &trans      &trans                                                                     &kp LEFT_ALT  &trans            &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        GAME {
            display-name = "GAME";
            bindings = <
&kp TAB         &kp Q  &kp W  &kp E     &kp R  &kp T                             &kp UP                &kp Y               &kp U  &kp I         &kp O          &kp P           &kp BSPC
&kp LEFT_SHIFT  &kp A  &kp S  &kp D     &kp F  &kp G                   &kp LEFT  &kp ENTER  &kp RIGHT  &kp H               &kp J  &kp K         &kp L          &kp ES_N_TILDE  &kp ES_ACUTE
&kp LCTRL       &kp Z  &kp X  &kp C     &kp V  &kp B         &tog 4              &kp DOWN              &kp N               &kp M  &kp ES_COMMA  &kp ES_PERIOD  &kp ES_MINUS    &kp ESC
                              &kp RWIN  &mo 1  &kp ES_SPACE                                            &mt LEFT_ALT ENTER  &mo 2  &kp RALT
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };
    };
};
